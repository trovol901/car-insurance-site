Entities

Users
Represents the users of the platform. Users can be buyers or sellers.
Attributes:
id: Primary key (Unique identifier for each user).
name: User's name.
email: User's email (must be unique).
password: User's password (hashed).
created_at: Timestamp (when the user was created).
Cars
Represents the cars listed on the platform. Each car is linked to a user (seller).
Attributes:
id: Primary key (Unique identifier for each car).
make: Car manufacturer.
model: Car model.
year: Year of manufacture.
price: Price of the car.
description: Description of the car.
user_id: Foreign key (links to the user who listed the car).
created_at: Timestamp (when the car was listed).
Transactions
Tracks purchases or inquiries made by users about cars.
Attributes:
id: Primary key (Unique identifier for each transaction).
user_id: Foreign key (links to the user making the purchase).
car_id: Foreign key (links to the car being purchased).
transaction_date: Timestamp (date of the transaction).
amount: Amount paid.
Relationships

A user can list multiple cars (one-to-many relationship).
A user can make multiple transactions (one-to-many relationship).
A car can be involved in multiple transactions (many-to-one relationship).
DDL Explained

Users Table
Stores all user information.
id: PK (Unique for every user).
email: Must be unique for each user.
Cars Table
Stores cars listed by the user.
id: PK for cars.
user_id: FK that links to the Users table.
Transactions Table
Tracks transactions made by users.
id: PK for transactions.
user_id: FK that links to Users.
car_id: FK that links to Cars.
DML Explained

Insert
Insert a new user.
Insert a new car listing.
Record a new transaction.
Select
Select all users.
Select all cars.
Select all transactions for a user.
Update
Update car details.
Update user information.
Delete
Delete a user.
Delete a car listing.
Delete a transaction record.

